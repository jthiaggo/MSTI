1 ----- 
// Filtrar logs de login bem-sucedidos (ResultType == 0) nos últimos 30 dias
SigninLogs
| where ResultType == 0
| where TimeGenerated >= ago(60d)
// Extrair o país do campo LocationDetails
| extend Country = tostring(LocationDetails["countryOrRegion"])
// Selecionar o nome do usuário
| extend UserName = UserPrincipalName
// Contar o número de logins por país e usuário
| summarize LoginsCount = count() by Country, UserName
// Ordenar os resultados por número de logins em ordem decrescente
| order by LoginsCount desc

///////////////////////// ####################################### ///////////////////////////////////

2  --- AGRUPADO POR DIAS

// Filtrar logs de login bem-sucedidos (ResultType == 0)
SigninLogs
| where ResultType == 0
| where TimeGenerated >= ago(30d)
// Extrair o país do campo LocationDetails
| extend Country = tostring(LocationDetails["countryOrRegion"])
// Selecionar o nome do usuário
| extend UserName = UserPrincipalName
// Agrupar os logs por dia
| extend Day = bin(TimeGenerated, 1d)
// Contar o número de logins por país, usuário e dia
| summarize LoginsCount = count() by Country, UserName, Day
// Ordenar os resultados por número de logins em ordem decrescente e depois por dia
| order by LoginsCount desc, Day asc

///////////////////////// ####################################### ///////////////////////////////////

3 ----  FILTRAR POR PAISES
// Filtrar logs de login bem-sucedidos (ResultType == 0) nos últimos 30 dias
SigninLogs
| where ResultType == 0
| where TimeGenerated >= ago(30d)
// Extrair o país do campo LocationDetails
| extend Country = tostring(LocationDetails["countryOrRegion"])
// Filtrar apenas entradas dos Estados Unidos
| where Country == "US"
// Selecionar o nome do usuário
| extend UserName = UserPrincipalName
// Contar o número de logins por usuário
| summarize LoginsCount = count() by UserName
// Ordenar os resultados por número de logins em ordem decrescente
| order by LoginsCount desc

/////////////////
let _timeRange = ago(30d);
SigninLogs
| where TimeGenerated >= _timeRange
| where ResultType == 0  // Successful logins
| extend Country = tostring(LocationDetails.countryOrRegion)
| where isnotempty(Country)
| summarize SuccessfulLogins = count() by Country
| order by SuccessfulLogins desc
